2023-10-20 16:35:09,131 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 16:35:09,131 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 16:35:12,018 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2319 request_id=f6aab8da3256e4131e56b57611c23476 response_code=200
2023-10-20 16:35:12,019 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BjwbMerKbiRGQOaMzYxTLu2BRz1b",\n  "object": "chat.completion",\n  "created": 1697808909,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 443,\n    "completion_tokens": 27,\n    "total_tokens": 470\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 13:35:12 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2319\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39727\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'409ms\', \'x-request-id\': \'f6aab8da3256e4131e56b57611c23476\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8191a47548a11526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 16:35:12,033 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 16:35:12,033 - openai - DEBUG - api_version=None data='{"input": ["What was the balance of my savings account for the last 3 months?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 16:35:12,416 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=129 request_id=ec44d5d0f0be5648711aa16730e153dd response_code=200
2023-10-20 16:35:12,417 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 15,\n    "total_tokens": 15\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 13:35:12 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'129\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999984\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'ec44d5d0f0be5648711aa16730e153dd\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8191a485de371526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 16:35:12,447 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 16:35:12,447 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"weekly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastWeek\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-01-08\\",\\n            \\"amount\\": 2722.5,\\n            \\"changeFromLastWeek\\": 204.34\\n        },\\n        {\\n            \\"date\\": \\"2023-01-15\\",\\n            \\"amount\\": 2914.01,\\n            \\"changeFromLastWeek\\": 191.51\\n        },\\n        {\\n            \\"date\\": \\"2023-01-22\\",\\n            \\"amount\\": 3136.86,\\n            \\"changeFromLastWeek\\": 222.85\\n        },\\n        {\\n            \\"date\\": \\"2023-01-29\\",\\n            \\"amount\\": 3341.11,\\n            \\"changeFromLastWeek\\": 204.25\\n        },\\n        {\\n            \\"date\\": \\"2023-02-05\\",\\n            \\"amount\\": 3552.04,\\n            \\"changeFromLastWeek\\": 210.93\\n        },\\n        {\\n            \\"date\\": \\"2023-02-12\\",\\n            \\"amount\\": 3762.79,\\n            \\"changeFromLastWeek\\": 210.75\\n        },\\n        {\\n            \\"date\\": \\"2023-02-19\\",\\n            \\"amount\\": 3953.16,\\n            \\"changeFromLastWeek\\": 190.37\\n        },\\n        {\\n            \\"date\\": \\"2023-02-26\\",\\n            \\"amount\\": 4138.25,\\n            \\"changeFromLastWeek\\": 185.09\\n        },\\n        {\\n            \\"date\\": \\"2023-03-05\\",\\n            \\"amount\\": 4347.11,\\n            \\"changeFromLastWeek\\": 208.86\\n        },\\n        {\\n            \\"date\\": \\"2023-03-12\\",\\n            \\"amount\\": 4561.53,\\n            \\"changeFromLastWeek\\": 214.42\\n        },\\n        {\\n            \\"date\\": \\"2023-03-19\\",\\n            \\"amount\\": 4770.67,\\n            \\"changeFromLastWeek\\": 209.\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"daily\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromYesterday\\": 18.16\\n        },\\n        {\\n            \\"date\\": \\"2023-01-02\\",\\n            \\"amount\\": 2552.33,\\n            \\"changeFromYesterday\\": 34.17\\n        },\\n        {\\n            \\"date\\": \\"2023-01-03\\",\\n            \\"amount\\": 2579.92,\\n            \\"changeFromYesterday\\": 27.59\\n        },\\n        {\\n            \\"date\\": \\"2023-01-04\\",\\n            \\"amount\\": 2600.44,\\n            \\"changeFromYesterday\\": 20.52\\n        },\\n        {\\n            \\"date\\": \\"2023-01-05\\",\\n            \\"amount\\": 2622.53,\\n            \\"changeFromYesterday\\": 22.09\\n        },\\n        {\\n            \\"date\\": \\"2023-01-06\\",\\n            \\"amount\\": 2661.3,\\n            \\"changeFromYesterday\\": 38.77\\n        },\\n        {\\n            \\"date\\": \\"2023-01-07\\",\\n            \\"amount\\": 2680.86,\\n            \\"changeFromYesterday\\": 19.56\\n        },\\n        {\\n            \\"date\\": \\"2023-01-08\\",\\n            \\"amount\\": 2722.5,\\n            \\"changeFromYesterday\\": 41.64\\n        },\\n        {\\n            \\"date\\": \\"2023-01-09\\",\\n            \\"amount\\": 2762.65,\\n            \\"changeFromYesterday\\": 40.15\\n        },\\n        {\\n            \\"date\\": \\"2023-01-10\\",\\n            \\"amount\\": 2787.22,\\n            \\"changeFromYesterday\\": 24.57\\n        },\\n        {\\n            \\"date\\": \\"2023-01-11\\",\\n            \\"amount\\": 2807.64,\\n            \\"changeFromYesterday\\": 20.42\\n        },\\n        {\\n            \\"date\\": \\"2023-01-12\\",\\n            \\"amount\\": 2838.9,\\n            \\"changeFromYesterday\\": 31.26\\n        },\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What was the balance of my savings account for the last 3 months?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 16:35:14,698 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1685 request_id=a37120b7b56818d51aa2eb72ea08b474 response_code=200
2023-10-20 16:35:14,699 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BjwfmJqiMuhBqIep4vLc3lWO9J4v",\n  "object": "chat.completion",\n  "created": 1697808913,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- 2023-08-01: $8741.37\\n- 2023-09-01: $9732.43\\n- 2023-10-01: $10569.80"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 1496,\n    "completion_tokens": 60,\n    "total_tokens": 1556\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 13:35:14 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1685\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'88683\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'878ms\', \'x-request-id\': \'a37120b7b56818d51aa2eb72ea08b474\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8191a48a1ce11526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 16:35:14,707 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 16:35:14,708 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- 2023-08-01: $8741.37\\n- 2023-09-01: $9732.43\\n- 2023-10-01: $10569.80", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 16:35:19,410 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=4304 request_id=df06eac640aa41a2a866c140214a9b5a response_code=200
2023-10-20 16:35:19,412 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BjwhzQQJiFdPkFO6kFHcI2zyURGY",\n  "object": "chat.completion",\n  "created": 1697808915,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Your savings account has grown by €828.43 over the last 3 months, from €8741.37 to €10569.80. That\'s a growth of approximately 9.48%. Well done!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 537,\n    "completion_tokens": 45,\n    "total_tokens": 582\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 13:35:19 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'4304\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39689\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'466ms\', \'x-request-id\': \'df06eac640aa41a2a866c140214a9b5a\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8191a4968eaf1526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:45:30,505 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:45:30,505 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:45:33,910 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2575 request_id=a3b7e2882d10c705089d3847b5405469 response_code=200
2023-10-20 17:45:33,913 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl2hBfRE9aMuprDnJ9hxfTfYVDBK",\n  "object": "chat.completion",\n  "created": 1697813131,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 443,\n    "completion_tokens": 27,\n    "total_tokens": 470\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:45:33 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2575\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39727\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'409ms\', \'x-request-id\': \'a3b7e2882d10c705089d3847b5405469\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81920b83dc9b1526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:45:33,932 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:45:33,932 - openai - DEBUG - api_version=None data='{"input": ["What was the balance of my savings account for the last 3 months?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:45:34,264 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=18 request_id=aaff368996dc98a20f67d6196b178d8e response_code=200
2023-10-20 17:45:34,293 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 15,\n    "total_tokens": 15\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:45:34 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'18\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999984\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'aaff368996dc98a20f67d6196b178d8e\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81920b990ee81526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:45:34,309 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:45:34,311 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n\\nfile_name: data/balance/savings_weekly.json\\n\\n\\"amount\\": 4770.67,\\n            \\"changeFromLastWeek\\": 209.14\\n        },\\n        {\\n            \\"date\\": \\"2023-03-26\\",\\n            \\"amount\\": 4976.34,\\n            \\"changeFromLastWeek\\": 205.67\\n        },\\n        {\\n            \\"date\\": \\"2023-04-02\\",\\n            \\"amount\\": 5180.93,\\n            \\"changeFromLastWeek\\": 204.59\\n        },\\n        {\\n            \\"date\\": \\"2023-04-09\\",\\n            \\"amount\\": 5392.64,\\n            \\"changeFromLastWeek\\": 211.71\\n        },\\n        {\\n            \\"date\\": \\"2023-04-16\\",\\n            \\"amount\\": 5605.58,\\n            \\"changeFromLastWeek\\": 212.94\\n        },\\n        {\\n            \\"date\\": \\"2023-04-23\\",\\n            \\"amount\\": 5820.33,\\n            \\"changeFromLastWeek\\": 214.75\\n        },\\n        {\\n            \\"date\\": \\"2023-04-30\\",\\n            \\"amount\\": 5997.95,\\n            \\"changeFromLastWeek\\": 177.62\\n        },\\n        {\\n            \\"date\\": \\"2023-05-07\\",\\n            \\"amount\\": 6187.23,\\n            \\"changeFromLastWeek\\": 189.28\\n        },\\n        {\\n            \\"date\\": \\"2023-05-14\\",\\n            \\"amount\\": 6386.16,\\n            \\"changeFromLastWeek\\": 198.93\\n        },\\n        {\\n            \\"date\\": \\"2023-05-21\\",\\n            \\"amount\\": 6606.79,\\n            \\"changeFromLastWeek\\": 220.63\\n        },\\n        {\\n            \\"date\\": \\"2023-05-28\\",\\n            \\"amount\\": 6804.25,\\n            \\"changeFromLastWeek\\": 197.46\\n        },\\n        {\\n            \\"date\\": \\"2023-06-04\\",\\n            \\"amount\\": 7020.11,\\n            \\"changeFromLastWeek\\": 215.86\\n        },\\n        {\\n            \\"date\\": \\"2023-06-11\\",\\n            \\"amount\\": 7240.33,\\n\\nfile_name: data/balance/savings_weekly.json\\n\\n\\"amount\\": 7240.33,\\n            \\"changeFromLastWeek\\": 220.22\\n        },\\n        {\\n            \\"date\\": \\"2023-06-18\\",\\n            \\"amount\\": 7434.96,\\n            \\"changeFromLastWeek\\": 194.63\\n        },\\n        {\\n            \\"date\\": \\"2023-06-25\\",\\n            \\"amount\\": 7647.66,\\n            \\"changeFromLastWeek\\": 212.7\\n        },\\n        {\\n            \\"date\\": \\"2023-07-02\\",\\n            \\"amount\\": 7864.71,\\n            \\"changeFromLastWeek\\": 217.05\\n        },\\n        {\\n            \\"date\\": \\"2023-07-09\\",\\n            \\"amount\\": 8077.36,\\n            \\"changeFromLastWeek\\": 212.65\\n        },\\n        {\\n            \\"date\\": \\"2023-07-16\\",\\n            \\"amount\\": 8293.34,\\n            \\"changeFromLastWeek\\": 215.98\\n        },\\n        {\\n            \\"date\\": \\"2023-07-23\\",\\n            \\"amount\\": 8498.7,\\n            \\"changeFromLastWeek\\": 205.36\\n        },\\n        {\\n            \\"date\\": \\"2023-07-30\\",\\n            \\"amount\\": 8693.33,\\n            \\"changeFromLastWeek\\": 194.63\\n        },\\n        {\\n            \\"date\\": \\"2023-08-06\\",\\n            \\"amount\\": 8888.01,\\n            \\"changeFromLastWeek\\": 194.68\\n        },\\n        {\\n            \\"date\\": \\"2023-08-13\\",\\n            \\"amount\\": 9086.73,\\n            \\"changeFromLastWeek\\": 198.72\\n        },\\n        {\\n            \\"date\\": \\"2023-08-20\\",\\n            \\"amount\\": 9315.46,\\n            \\"changeFromLastWeek\\": 228.73\\n        },\\n        {\\n            \\"date\\": \\"2023-08-27\\",\\n            \\"amount\\": 9566.29,\\n            \\"changeFromLastWeek\\": 250.83\\n        },\\n        {\\n            \\"date\\": \\"2023-09-03\\",\\n            \\"amount\\": 9788.78,\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What was the balance of my savings account for the last 3 months?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:45:36,228 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1674 request_id=b7b6dba3c0fedaf5edae2bab09e37cdf response_code=200
2023-10-20 17:45:36,231 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl2kufDwSiJrHTERT3XRpBu1uYr0",\n  "object": "chat.completion",\n  "created": 1697813134,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- 2023-07-01: $7845.09\\n- 2023-08-01: $8741.37\\n- 2023-09-01: $9732.43"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 1504,\n    "completion_tokens": 60,\n    "total_tokens": 1564\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:45:36 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1674\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'88684\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'876ms\', \'x-request-id\': \'b7b6dba3c0fedaf5edae2bab09e37cdf\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81920b9ae8d21526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:45:36,244 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:45:36,245 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- 2023-07-01: $7845.09\\n- 2023-08-01: $8741.37\\n- 2023-09-01: $9732.43", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:45:40,510 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=4050 request_id=7fb90bb30f7d1d87b7164545053100dd response_code=200
2023-10-20 17:45:40,511 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl2mPAD9wlWDxj0sNfPA2rthU6ZM",\n  "object": "chat.completion",\n  "created": 1697813136,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Your savings account has grown by €887.34 over the last 3 months, from €7845.09 in July to €9732.43 in September. That\'s an increase of approximately 11.31%. Well done!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 537,\n    "completion_tokens": 49,\n    "total_tokens": 586\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:45:40 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'4050\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39689\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'466ms\', \'x-request-id\': \'7fb90bb30f7d1d87b7164545053100dd\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81920ba6f8121526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:50:51,903 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:50:51,904 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:50:54,598 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2410 request_id=b5c630df1944d6263d1d5f19bb26140f response_code=200
2023-10-20 17:50:54,601 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl7spP9AuNFU0QNGgMlP4CdBgCHE",\n  "object": "chat.completion",\n  "created": 1697813452,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 443,\n    "completion_tokens": 27,\n    "total_tokens": 470\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:50:54 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2410\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39727\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'409ms\', \'x-request-id\': \'b5c630df1944d6263d1d5f19bb26140f\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192135c18051532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:50:54,624 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:50:54,624 - openai - DEBUG - api_version=None data='{"input": ["What was the balance of my savings account for the last 3 months?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:50:56,453 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=1537 request_id=ebbb648c55e6fbc6e1b57e19ad991f9b response_code=200
2023-10-20 17:50:56,469 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 15,\n    "total_tokens": 15\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:50:56 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1537\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999984\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'ebbb648c55e6fbc6e1b57e19ad991f9b\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192136cdecf1532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:50:56,486 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:50:56,486 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What was the balance of my savings account for the last 3 months?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:50:58,358 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1581 request_id=d8fafeb4102d1164876c875fb2125ba1 response_code=200
2023-10-20 17:50:58,361 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl7xRxh0baMNlsWYtb8Q6t848D1i",\n  "object": "chat.completion",\n  "created": 1697813457,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- October 2023: $10,569.80\\n- September 2023: $9,732.43\\n- August 2023: $8,741.37"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 550,\n    "completion_tokens": 54,\n    "total_tokens": 604\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:50:58 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1581\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89479\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'347ms\', \'x-request-id\': \'d8fafeb4102d1164876c875fb2125ba1\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921378882f1532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:50:58,367 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:50:58,375 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- October 2023: $10,569.80\\n- September 2023: $9,732.43\\n- August 2023: $8,741.37", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:51:00,653 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2036 request_id=5f49b9e97832af46ab3b5e8e641dfa69 response_code=200
2023-10-20 17:51:00,655 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl7yX6U7i2pvERaw9sRTdzAqQ4Ls",\n  "object": "chat.completion",\n  "created": 1697813458,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "add",\n          "arguments": "{\\n  \\"a\\": 10569.80,\\n  \\"b\\": -8741.37\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 531,\n    "completion_tokens": 27,\n    "total_tokens": 558\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:51:00 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2036\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39686\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'471ms\', \'x-request-id\': \'5f49b9e97832af46ab3b5e8e641dfa69\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921384599e1532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:51:00,660 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:51:00,663 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "Hi George, how much has my savings account grown in the last 3 months?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account for the last 3 months?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for the last 3 months was as follows:\\n\\n- October 2023: $10,569.80\\n- September 2023: $9,732.43\\n- August 2023: $8,741.37", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "add", "arguments": "{\\n  \\"a\\": 10569.80,\\n  \\"b\\": -8741.37\\n}"}}, {"role": "function", "content": "1828.4299999999985", "name": "add"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:51:04,365 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=3143 request_id=663502378dababbc6bd53eca26610314 response_code=200
2023-10-20 17:51:04,367 - openai - DEBUG - body='{\n  "id": "chatcmpl-8Bl81Xb1Qsh1DEqnJamCaFJSLoTCa",\n  "object": "chat.completion",\n  "created": 1697813461,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Your savings account grew by €1,828.43, from €8,741.37 in August to €10,569.80 in October, which is a significant increase. Well done!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 573,\n    "completion_tokens": 41,\n    "total_tokens": 614\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:51:04 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'3143\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39680\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'480ms\', \'x-request-id\': \'663502378dababbc6bd53eca26610314\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921392af471532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:14,139 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:14,140 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much did I have in savings at the beginning of the year?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:53:16,958 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2319 request_id=9e9fc323af736cc3db2628e45d44267d response_code=200
2023-10-20 17:53:16,959 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAAnog3tRPNlw9Do8DhMTdVmLr2",\n  "object": "chat.completion",\n  "created": 1697813594,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account at the beginning of the year?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 440,\n    "completion_tokens": 27,\n    "total_tokens": 467\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:17 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2319\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39729\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'406ms\', \'x-request-id\': \'9e9fc323af736cc3db2628e45d44267d\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819216d619451532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:16,965 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:53:16,965 - openai - DEBUG - api_version=None data='{"input": ["What was the balance of my savings account at the beginning of the year?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:53:17,261 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=30 request_id=983174fd631b62cd5c29d56ee21a531d response_code=200
2023-10-20 17:53:17,262 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 15,\n    "total_tokens": 15\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:17 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'30\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999981\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'1ms\', \'x-request-id\': \'983174fd631b62cd5c29d56ee21a531d\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819216e678651532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:17,268 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:17,268 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What was the balance of my savings account at the beginning of the year?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:53:18,719 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=972 request_id=1fa8c32377867ab21a1d875a595d49cd response_code=200
2023-10-20 17:53:18,720 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAEmKmYKYRiaLIJVT5QuZzBtXPr",\n  "object": "chat.completion",\n  "created": 1697813598,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account at the beginning of the year was $2518.16."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 550,\n    "completion_tokens": 19,\n    "total_tokens": 569\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:18 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'972\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89476\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'348ms\', \'x-request-id\': \'1fa8c32377867ab21a1d875a595d49cd\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819216e85bf51532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:18,722 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:18,722 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much did I have in savings at the beginning of the year?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What was the balance of my savings account at the beginning of the year?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account at the beginning of the year was $2518.16.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:53:21,297 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2312 request_id=22249cfa8a1f7a141340fc89a89c8ba6 response_code=200
2023-10-20 17:53:21,299 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAFJ6zJL1CZQXEMIegt4k9KajMo",\n  "object": "chat.completion",\n  "created": 1697813599,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "At the start of this year, your savings account had a balance of €2518.16."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 493,\n    "completion_tokens": 21,\n    "total_tokens": 514\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:21 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2312\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39708\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'438ms\', \'x-request-id\': \'22249cfa8a1f7a141340fc89a89c8ba6\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819216f17bee1532-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:40,963 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:40,966 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "And how much is in my savings account right now?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:53:43,392 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1994 request_id=5851999c499e32a1d05b0ef01f547a60 response_code=200
2023-10-20 17:53:43,399 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAbreOaKguZoTPealgEKikYiXrx",\n  "object": "chat.completion",\n  "created": 1697813621,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What is the current balance in my savings account for Month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 437,\n    "completion_tokens": 26,\n    "total_tokens": 463\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:43 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1994\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39732\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'402ms\', \'x-request-id\': \'5851999c499e32a1d05b0ef01f547a60\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192177d5e9b444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:43,407 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:53:43,408 - openai - DEBUG - api_version=None data='{"input": ["What is the current balance in my savings account for Month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:53:43,697 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=17 request_id=891970ddc68e570ac494e3b09f861bf9 response_code=200
2023-10-20 17:53:43,730 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 14,\n    "total_tokens": 14\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:43 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'17\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999985\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'891970ddc68e570ac494e3b09f861bf9\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192178bc94c444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:43,747 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:43,747 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What is the current balance in my savings account for Month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:53:45,339 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=980 request_id=fe3ce8fef8a33cd26446ac741ff351b7 response_code=200
2023-10-20 17:53:45,341 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAek5wqDP3ksqsMcJIt6vK8oqR3",\n  "object": "chat.completion",\n  "created": 1697813624,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The current balance in your savings account for Month 10 is $10,569.80."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 549,\n    "completion_tokens": 19,\n    "total_tokens": 568\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:45 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'980\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89479\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'346ms\', \'x-request-id\': \'fe3ce8fef8a33cd26446ac741ff351b7\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192178ddcd2444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:53:45,347 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:53:45,350 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "And how much is in my savings account right now?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the current balance in my savings account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The current balance in your savings account for Month 10 is $10,569.80.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:53:47,392 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1801 request_id=485aa650d93e6b35de92e94c7455d2a7 response_code=200
2023-10-20 17:53:47,395 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAf02SEvS1xZbjmar62gCSx0CEW",\n  "object": "chat.completion",\n  "created": 1697813625,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The current balance in your savings account is €10,569.80. Good job on saving!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 489,\n    "completion_tokens": 21,\n    "total_tokens": 510\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:53:47 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1801\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39713\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'430ms\', \'x-request-id\': \'485aa650d93e6b35de92e94c7455d2a7\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921797ef92444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:04,399 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:04,407 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much is in my current and savings account combnied?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:54:06,963 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2089 request_id=ff284ac86ea6ce7f336bf6aa61b80b28 response_code=200
2023-10-20 17:54:06,963 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlAztmjzS4VUVucLynbTiWLCF8sD",\n  "object": "chat.completion",\n  "created": 1697813645,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 439,\n    "completion_tokens": 25,\n    "total_tokens": 464\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:07 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2089\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39731\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'403ms\', \'x-request-id\': \'ff284ac86ea6ce7f336bf6aa61b80b28\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192180fcb02444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:06,964 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:54:06,964 - openai - DEBUG - api_version=None data='{"input": ["What is the balance of my current account for Month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:54:07,284 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=81 request_id=83f051e16a73d74f5c20ce89b5969660 response_code=200
2023-10-20 17:54:07,285 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": "VSglvMkUmLz2rIC61fWYvAA2SLznAKk89VRHva8ip7urV1C7OUqZvDtYnjx/Ruo7S2kOvStbkzvEXaY8j0P1OyekoTwI51m8R563uxT+qbzfBWO8hkGwO1V52LwPrFA7pJJZvCOqAbxrY6Q8qBN8u8jyLTyWCOy8YAmmOwKOAby/C027OyLPux5sDbyBOQs9g2L0OylNjjyWCOw8T4WYvO0+nTxCOPk8JriGvAS36jy/1X27uJAKPKbqEryYFvG8wcgevZQwtjwDFQS8OMMWuhKmcLxnmE28kGVfvInqHDtzZWk8ge/WPH8XobuNoQ48fdPMu1SNPTxH72q7g6youy5pmLywRBG7TKZcvMy9hDoYyYA70D6nPElHJLs3PBQ9NX9CPBVPXbshZq087aO1ukVG/jtYWBS8ZqyyO2YRSzsQzjo8SUckvA5bHbxT0Gu8u1RbPF/nO7xIWwk8N43HOxDOurzDOzy8e/uWPIon6zyZ5yc9cLx8O2No3juCwI08oEcGvYP92zw5Zf27qPiXvHC8fLs5AOW7yrb+vOKuz7v8Gb68YhervKIL17tfgiO80rFEO9dotrvHa6u81uGzPBdd4jwzp4y8xn+QvLirbrsQfQc91pf/u1Lk0Lyv2PK7uJAKPXoqYDqz2Zg7zL0EOo3QVzzCtDm60zhHu7Icx7zNqZ+86Icru0wLdbwpTY47m5AUPPCd1TwOb4I7lRzRPJ/b57yHYxo7KtQQPGDT1rxDbkg79YoWPf9JLTzCGdK7hbqtPKIfvDwEt+o78J3Vu6Y7xroyT9O83LqPuyUxhDwOJc48qX+au7VMNjvT55M70WCRO88cvTu5F428F8L6u1yIA70SpvA7zfrSPO+xOjxshQ67xF2mPDjDlrpZDmA7QA+QvAS36jsOb4I7wKY0PEfUhrzNRIc8XQ+GO52emTzEcQu89GgsvTyp0bzY77i7B6oLu/vj7jzRe/U677E6PN1cdryfETe8eo94PJQwtryAnqM70rFEPJmCDzzqqRU8HliovGYRS7zEXSa/FJkRPLGVxDvzzcS50+eTPDkA5btx8su7yKh5ugwXSbwcr7s7/xPeu58lHLyv2HK8cTyAvFBxM7xOtOG8AWwXuWyFjjv+XRK9TS1fvDrRm7zBfuo8iP4BvYbclzzF+A08a7TXvObK2Tsio/u8UhqgvIfIsjwX+Ek8uJAKu7bTuDyO8kE7Z2kEPd1c9jrr5uO8HlgoPJ45Ab1ourc8YAkmvGdphLxdxdE6bQwRvf3Wj7rtPh08IHoSPVUUwLtzZek8GdD/O9eehTw15Fq8yRSYvLslkrsgehI8jH+kuXOvnTwfqVu56vrIO/S5X7yAnqO8tfuCvNaX/7u4Rla8DBfJu/eYG7wvi4K8v9V9POL4Az10h1O8zfrSPJx8rzyJ1re8IbfgOmnwBj0rW5O7t7/TPNZ8m7zfT5c8GVCDPAf7vjxqd4m8zxy9O9WQgLzRYJE8p3EVO3ZEpbhwBjG8Y7KSPAm4EDyg/VE8o/dxO1Lk0DxH1Ia755uQPJ8RtzxFfM28D0c4vE/qsLugR4a7V+z1O/fHZDwlTGg8Tk9JOgPftDwXXWI8voTKvK8iJzz5uoU8UhogvTGZhzyD/du8i5OJutRaMby49aK82RGjvMF+6jzPUgy7mdNCPJj7jDkFIwk9/daPO+cAqTw+AQu9TrThu3AGMTxdD4Y8B5YmuzFjuDuT+ua7gGjUPM2pnzxrYyS7Z2kEvRzlijzj0Dk7htyXPGUlsLsd0SU7KU0OvcEtt7ox/h+8IQEVPBqhtrxX7HU8eIHzvHfLpzyAsog86djeOy0zyTxgv/G8uJAKvI5XWry2OFG8rcrtuwPftLzxbow7hy1LvICeo7y3bqC8UMJmvET1yjzxv7+89/0zOida7buB71a8/AXZOizilTwv8Jq8gAO8vNSJ+ru5Fw07e2CvvINHELvBfuq7igwHPG3WQbz5cFG8TXcTu8tR5rsRBIq7m1rFPFavpzxc7Zu67wLuPKdxlTxjA8Y8wrS5PACb4LzRYBE9LmkYuUrOJjw2tZG8KbImO9qYJbsD37Q7t7/TO3rFRzsCRE08QWDDugqQRj0J0/Q81G6WO0VG/jyTqTO843+GvNS/yTuW7Ye8JR0fPWqS7TwLfGE7yRQYvYdjmjoN7/67LgQAuytbk7vWfBu61CRiuofIMrzQo788hqbIOzxEubtl2/s7kg5MvF0PhjvL7M27yENhPKiu4zxzZWm8dzBAvI9DdbxlduO6YKSNvD/tpTw3jcc8IqP7O6ze0jxl23s8NgZFPBZxR7ucfK8695gbPEhbCTzA3AO8JTEEPBrXhbt1c248M6eMPMBBnLsx/h88F6eWvF3F0bpLaY686CKTvAG9yrsvQc68Ui6FvMRdpjufdk88WL0sPebK2TxQwmY7IqN7O0DF27zoh6s8EH0HPFtmmby9/Ue8zL0EPNIWXbzPHD28R563OVQ8ijz74+66XQ8GPZ3NYrwgepI7OCgvu3Nl6Tum6hI87mAHvXVYCr15o108y4c1ukc5HzsAAHk8B/s+vEtpDrwoK6Q8eLfCPB02vryI/oE7FSCUu5YIbLuBOYu8TyCAujwO6jouH+S4s/T8PCCVdrteYLk8x7zeu7iQijxDbki8iTtQOuebkDvhwrS7AqnlvFUUwLx7YK+7DdQaugkJRLz9O6i8F13iPPVUxzwv8Bo8LgQAvMuHtbzEJ1c943+GPNFgEbq770K8V9ERvejsQ7swd5091pf/PNszjbz5uoU7ZO9gvNcDnjxNdxO6a2MkO+M10jwhZi08CvXeujAShbzWl3+89qyAPPnVabye78y7GtcFvHUiu7xp8AY8SjO/vD+IjbyLk4k8Sx/aPHtMSj0JCUQ72RGjPOPknjyOjam8V9ERPGUlMLxiK5C4GdB/PIIlpruDrKg3JGBNOyUxBD1RXU48p8LIOpUc0bsSi4w8z21wu63K7TwxYzi7fB0BvJ/bZzxbZhm8/aDAuz631jwxY7g8ancJvHFX5LgiPuO7BAGfuzDIUDu8ES08Gyg5Ox6H8bmcfC+6EVU9vC/wmryIGWa9p3EVvIx/JDwbwyC8iYWEuudlwbzXngW9B5YmOfFaJ7yrKAe8yI0VvJHsYbwlTGi8wzu8u8FjBj2Xxb07P+2lPJaj07ubWkU8qPgXPcF+6jqEmEO7xHGLO7duILwEnAa9pbTDPCI+4zwYyYA8n9tnPOqplTySvRi8WwGBuxPI2jyfEbe8WUSvu+uByzu5fKW8VXnYPEXGgTyf2+c5tHSAO/gfnrsQfQe95UNXvGrIvLzNX2s8esXHPMSM7zkiiBe8hXB5O7EwrDysFCK80D4nu78fMjziE+g5e/uWPHAGMTyT+mY7BnS8u+y3mjtCOHk8nyWcvMEtNzxs6qY6QA+QOqD9UTz8GT67WanHuyOqAbwlTOg7AqnlPA05sztsoPK8kGXfvP3xc7yv2HK8UMLmvDXkWjxSGiC89B54vDPW1bwkYE08meenvJTLHbzT5xM8E8javHOvHbx3ldg7fDhlu7powDzXngW8G3lsvGyFDr0rdve7YisQvOuBy7w3PJS7ptYtvJtaxTzOy4k8kK+TPA/2BLzBks883i2tu2SeLbo55QC9zfrSO8Y1XLwkYM28meenvOqVsDwVhSw7LEeuO7hGVrz7LSM8faSDPP07KDh0h1O80Y9avWJ8w7vBLTc83ffdu/sto7yFuq27CB2pvBf4ybwRBIo8Say8PH98uTuzPrG7fQmcPGLh27vG0EM9dSI7vJfFvbzQPqc8uFq7vGOyEr1AD5C8+kGIu/bbybs88wU9mGClPMWuWTscr7u8mm4qu0qYV7tC50W8VXnYuuVD1zt0NqC7YwPGu3LDgjtsoHI8oEcGPVTy1TxBlhK9iBlmPO7FnzvBLbe7k0QbPIGKvjowd508KU2OPOebEDz17648j3lEPPG/P7sVhSy8tjjRu0H7qrzWl/888b+/PL2sFL2u7Ne8xpr0PK2bpLxt1kG8iLRNuwRmtzy/VQE8YfVAO15guTuNoY68WsuxvHLDAj3rgcu5TEFEuwUjibtDCbC8Zdt7u+ebELouaRi89B74PGeYTbmAnqO8KopcO+/nCbzt9Oi64DsyPYJ2Wbw1Gio9vjMXvG8aljz91g+67AjOvJbth7zYiqC809MuPPZ2sTzQoz+8IJX2Onp0FDwvQU471CRiOggdqTsOima8bviruX1uNDocSiM79B54PItJ1bvbTnG8EvAkOwFsF7x8nf06HiJZvZGHyboMTRg8MiCKO8sinbwf8w86zjAiPA3UGj1H72q8AvMZO0jAoTtQJ386HTa+vPIQ8zyMNfA8NzyUPL4zl7zQoz+7z7ckvX71trzamKU8sKkpvEOkF71c7Ru8sYFfPKgT/Lhknq28DsA1uw2eS7vmFA485fKjusX4Dbz51em8whnSO7slEjxUjb28v1WBOlAMm7rXngU8jBqMvDzzhTpwvPw7r3PaO2qSbbyQZV88U9DrPC66SzxF4eW7++NuvBG6VTxdD4Y6KRc/PCN0Mjwx/p+8FSAUvKq86DspaHI80D4nO8SMbziWCOw6bpMTPPnV6bt1WIq8faSDvLoDqLwlTOg8VI29u7tU27yvDsK6Mjtuuz16CLzJeTC9N/JfvFBxMz1PIAA98vUOPGNo3rxFKxo9WpXiO+qVsDuiVQu9lMsdPDSTpzwOiua87sUfPM8I2LuM5Ly8MNw1PEeetzwGdDw8d8snPaHp7DtBlhK8CdN0vMF+ajwnkDw8iP6BPBgumTzarAo7fDhlvKUZXLtZRK+7OUqZPDI77rw2BkU7AJvguzV/QrwwyNC8yd7IvDfyXzuM5Ly8+vfTvLTFMzyWPrs8C3xhOwS36rnBfmo8L/AauiFmrbsfqds8KQPavOEnTbxwvHw8g0eQvCxHrjvBkk+83xnIu5RmhTo/iI27i5OJOgnT9Lq/1X28rN5SPLEwrDt5o9282EDsPHi3QryUy528xwaTPFIaoLzljYu7bKDyvKdxlbzUbhY9p3GVu/Cd1bw5AOW7dViKPHw4ZTx1WAo8XKNnPp2eGTw3V/g56XNGPTSTJz3DO7w7P+0lPNKxxDpmEcs8SFuJPJ/b57yr8rc8nyWcvM4wIrsOW528R9SGvPvICr0Si4y8LoT8u0msPDzIjRW7Cj+TPFnfljvw0yS8urnzPFIuhTtYvaw78W4Muif11DvcC0M8hy3LvEOkl7vcH6i8Uwa7OzkUSrzt2QQ8NrWRO2J8w7zV9Zg8XKNnuwWIobzEcYs7g0eQvGp3ibzuYAe8HofxPOWNiztOGXq8vx8yOaP38Ty0j+S8N6GsO9glCD3KZcu7db2iu371trwx/h89SUckvB4iWbwUmRE8XrHsu2w7Wjwdm9a7zL0EPeL4AzshZq08d5VYvGqSbTwsrMY8tfsCvcRdpjwRBIo8qRqCu16WiLtB+yq9oh+8O6ILV7u5fKU8Jz8JPWV2Yzy4q268HTa+PNQk4ju5fCW98+Epu6QtwbybkJS8xa5ZvIpxH7u7VFs7IHoSPKhdsDu9x/i8K3Z3uQ5vAjy3v9O7OptMOxf4ST0PR7i8XmC5vMQn17pqLVU8NmtdPOQh7btfgiO8FJmRvG6Tk7zfTxc8eLfCvIv4Ib1Ta9M7yyKdvJix2DvWfJu8cAYxvF3ZNjwOima8aLq3POqVMLzw06S8urlzO38XIb1k72C8K1uTvDdXeDuyUpa8N41HvMVJwbzxvz+8zZU6vR/zjzzGmvS7rHk6PHQ2IL0DFYS8pU8rPPYsfToXwvq7wNyDvN33XTzTnV+7CdP0O2bigTrhcYG8/aBAPDpsA73i+AM9vcf4u72sFL3w06S8eo94uxFporyFVZW86FHcOywR3zwpaPI7/LSlvMSM77z7yIo8MWO4u7K3rryfEbc7+DODPKSS2by9mK+8zZW6PL2YL76uh787pU+rO9bhM7xM8BC8CpDGPAvGlbiHY5q8qPiXvHUiOzy0j2Q8oTMhvH/hUbvtPh28orqju5zhRzw+Ur683LqPPP4nQ7uKwtI8g0cQPRjJADz228m7l3SKvEglOjyKJ+s81pf/vB6H8Tw3oaw7PPOFu8K0ubssEV88PKnRPPFujDyz9Pw7fxehO7/V/Tv3x+S70hZdPP+uxTyvvY47seb3u94tLbsCDv48s6NJvPFuDD2jpj48pGMQvL2slLzVRky8E3cnPGIrkLwT3L88lGYFu3tgL7tE9Uo8M3G9PDMMpTyHLcs7y1FmuyI+47ucMnu8iP6BPHp0lLylT6s7o9yNPL39xzt9bjQ8m1rFvIh+fjxQpwI8ADbIvElHpDwGdLw7noo0u4IlJrz0aKy8aUE6u6j4l7tyeU48OMOWuZY+Oz2CwA29dSI7PDa1kTqv2PK7scsTPA3v/rsXwno7CQnEuy/wGrt6j/i6e2Avu9S/ybv0ud+79/0zPEAqdDwuH2Q8FSAUPD/tJTuNoY667dkEPN9qe7w6bIM8k0QbPSDLxbuR7OE7umjAO0tpjjz2EZm8Tv6VvOS81DsglXY8KWjyPDeNxzstM0k8kABHu4NidLz8T427wX7qu8RxCz2m6pK8MC3pvLX7Ajw/iI288hDzu+VXvL3ccNu7mYIPPGGQqDzuYAc8ZXbjPD8+Wbt7YC88TAt1vFShIjyRUfq8ruzXvDmvsbwSpvC5sTAsu5uQFDvTOMc8zA64vDjDljxAKnQ8nBcXO8Y13LwpTY46qrzou8HInrwFiKG8qeSyvDZrXTxwoZg8YL9xPL1i4Dx7TMq8rHk6vLSPZLy/cOW7LoR8OunY3rzl8iO8OWV9PMneyLz51Wm7+OnOOywR3zwXpxa9RRe1PJv1rLxF4eW8yyKdPJok9rzUWjG8GWvnvDrRG7zrgcs7RcYBvHZEJTzdkkW8d2YPu3Vz7jwF7bm7olWLvIW6rbyMfyQ8kVF6vGeEaDzNlbo8KtQQvO2jNTyXdAq7308XPevmY7wUmZG8A3qcPIrCUrx0NqC7hbotvVXDjDwHYNe8pbRDvHIUtjuiHzw7nyUcveFxAb0+AYu8igwHPAvGFTshZi08nxE3uwgxDruKJ+u7iBlmvDSTJzxDbsg8olWLPAKOgbwio3u7Z86cPNnbUzr/5JS8Jm5SPJ/bZ7zbM407IWatO7e/U73kvNQ8NrURPHv7lryN0Ne84viDPMRxCz1xPAC9dNGHvNhAbDyz9Py8EVU9OggxjrzTOEc7OeUAvMsinbziE2g7UV3OO5E2ljxFF7U7A3qcvDPWVbyZgo87Ufg1PImFBLxPIIA88+EpvNhA7Dsx/h+8tI9kvFsBgTxCgq27n3bPOxWFLD3UJGK7YAmmvBt57Lt6j3g8uKtuPHTRB71sO1q6vwvNvPxPjTxTtQe8TNyrvOg997n/Sa2670wiPEAqdDxZqce7YAkmPSEBlTuAAzy7Ab3KvOqplbxknq284zXSuMHInjtvfy48MNy1vJnnpzwf8488XQ+GPImFBLwoKyS8M9bVO1giRbuM5Dw8KWjyPHYO1rx3MMA8Y2jeOzAt6TuEM6s8Gyg5PGYRyzpwa0m8NRqqPHtMSrz91o87XKPnPM+3JDxT0Ou8cAYxOqP38Ty25x08WCLFu6q8aDzcC8O8xUlBPErOprt6dBQ8YKSNvP8T3rwnpCE9X+e7PPDTJLtFRn68eFKqu3TRhzzkIW28oelsOjrRm7yz9Hy7Ui4FO8iNFTyT+mY8mgkSvX98ubxaMEo8LlUzutM4xzwJ0/S6B8VvPNPnE7wg36q7s9mYO642DL20YBu9J1rtPELnxTlOY667EQQKu8+3pLt+K4Y8yKj5uxkaND3wnVU8mBZxPKW0wzz6krs78W4MuU604bxH1Aa9wZJPvKx5urzFSUG8NRqqPGygcjxIwKE9LgSAO1ztm7wbeew7yFfGPDwO6jzrgcs8JPs0PBlrZ7wHxW+7De/+Ow+sULvBYwa7gAM8Okym3LsL4Xk8jlfaumyFDjr3/bM7qms1vMhDYboN7368SMChuXp0lDzmeSa75fKjvNF79blVKCW8jaGOvBEEir0UY0K7uRcNPHydfbwN7/67apJtPCzilToP9oS8yI2VvPQe+LoRVb08PN8gvJJYAD01f0I8KRc/OsWu2bz6QQi9D/aEOlztGz2KJ2u9"\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 13,\n    "total_tokens": 13\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:07 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'81\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999986\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'83f051e16a73d74f5c20ce89b5969660\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192181ef96e444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:07,290 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:07,290 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/current_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"current\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 411.97,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 753.52,\\n            \\"changeFromLastMonth\\": 341.55\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 1028.29,\\n            \\"changeFromLastMonth\\": 274.77\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 1349.06,\\n            \\"changeFromLastMonth\\": 320.77\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 1634.89,\\n            \\"changeFromLastMonth\\": 285.83\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 1950.69,\\n            \\"changeFromLastMonth\\": 315.8\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 2223.61,\\n            \\"changeFromLastMonth\\": 272.92\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 2506.37,\\n            \\"changeFromLastMonth\\": 282.76\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 2810.03,\\n            \\"changeFromLastMonth\\": 303.66\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 3097.3,\\n            \\"changeFromLastMonth\\": 287.27\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What is the balance of my current account for Month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:54:08,378 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=722 request_id=dd0586716df837a0fe29990c8120822a response_code=200
2023-10-20 17:54:08,380 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlB1b7g0GtnNmQDeiTQutZlaZcx8",\n  "object": "chat.completion",\n  "created": 1697813647,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your current account for Month 10 is 3097.30."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 544,\n    "completion_tokens": 17,\n    "total_tokens": 561\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:08 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'722\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89482\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'345ms\', \'x-request-id\': \'dd0586716df837a0fe29990c8120822a\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819218210d2d444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:08,381 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:08,382 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much is in my current and savings account combnied?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:54:11,241 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2633 request_id=ef8c19aa635e7c2161978cd335049f06 response_code=200
2023-10-20 17:54:11,242 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlB2iy69B6B7xnIrqAnfnTjTvCle",\n  "object": "chat.completion",\n  "created": 1697813648,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 488,\n    "completion_tokens": 25,\n    "total_tokens": 513\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:11 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2633\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39714\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'429ms\', \'x-request-id\': \'ef8c19aa635e7c2161978cd335049f06\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921827dbfc444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:11,244 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:54:11,246 - openai - DEBUG - api_version=None data='{"input": ["What is the balance of my savings account for Month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:54:11,570 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=29 request_id=271ef9c6b4db3e0a17fbb3efd195d188 response_code=200
2023-10-20 17:54:11,580 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 13,\n    "total_tokens": 13\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:11 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'29\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999986\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'271ef9c6b4db3e0a17fbb3efd195d188\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921839ff8e444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:11,599 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:11,600 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What is the balance of my savings account for Month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:54:12,573 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=698 request_id=4001d2ecd7f6c7b103b355ae5175a48c response_code=200
2023-10-20 17:54:12,573 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlB6gjrE5IAZ3Em8DvTqHQn9oeDy",\n  "object": "chat.completion",\n  "created": 1697813652,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account for Month 10 is 10569.8."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 548,\n    "completion_tokens": 17,\n    "total_tokens": 565\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:12 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'698\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89482\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'345ms\', \'x-request-id\': \'4001d2ecd7f6c7b103b355ae5175a48c\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'8192183bfb52444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:12,574 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:12,575 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much is in my current and savings account combnied?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for Month 10 is 10569.8.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:54:14,854 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1940 request_id=262ce0990eabcacdc54ec122252ba09f response_code=200
2023-10-20 17:54:14,858 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlB7oZ1zAKPTouV7B2XrJlMHrXNr",\n  "object": "chat.completion",\n  "created": 1697813653,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "add",\n          "arguments": "{\\n  \\"a\\": 3097.30,\\n  \\"b\\": 10569.8\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 537,\n    "completion_tokens": 27,\n    "total_tokens": 564\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:15 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1940\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39697\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'454ms\', \'x-request-id\': \'262ce0990eabcacdc54ec122252ba09f\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819218420f51444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:54:14,861 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:54:14,878 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much is in my current and savings account combnied?"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for Month 10 is 10569.8.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "add", "arguments": "{\\n  \\"a\\": 3097.30,\\n  \\"b\\": 10569.8\\n}"}}, {"role": "function", "content": "13667.099999999999", "name": "add"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:54:16,774 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1514 request_id=38cb1089a1a50f0cac71cd10cece4eb0 response_code=200
2023-10-20 17:54:16,776 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlB9EvavuzFJrNbVurN98r2L16aE",\n  "object": "chat.completion",\n  "created": 1697813655,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The total amount in your current and savings account combined is €13,667.10."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 578,\n    "completion_tokens": 19,\n    "total_tokens": 597\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:54:16 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1514\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39690\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'465ms\', \'x-request-id\': \'38cb1089a1a50f0cac71cd10cece4eb0\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'819218507ae6444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:55:59,375 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:55:59,386 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "What do I spend the most money on?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:02,125 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2231 request_id=e502c9e15288d17faf5c00f15cdee33b response_code=200
2023-10-20 17:56:02,129 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlCpzKixolX77tWEpfwvg0ETwGr9",\n  "object": "chat.completion",\n  "created": 1697813759,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "spending",\n          "arguments": "{\\n  \\"input\\": \\"What category do I spend the most money on in month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 435,\n    "completion_tokens": 27,\n    "total_tokens": 462\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:02 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2231\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39736\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'396ms\', \'x-request-id\': \'e502c9e15288d17faf5c00f15cdee33b\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921adee80c444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:02,131 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:56:02,131 - openai - DEBUG - api_version=None data='{"input": ["What category do I spend the most money on in month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:56:02,440 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=43 request_id=bd4ee06066eb35b53386c3678fa93208 response_code=200
2023-10-20 17:56:02,468 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": "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"\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 14,\n    "total_tokens": 14\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:02 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'43\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999986\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'bd4ee06066eb35b53386c3678fa93208\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921aeed862444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:02,473 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:02,473 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/spending/category_tables.json\\n\\n0\\n        },\\n        \\"Month 6\\": {\\n            \\"ZARA\\": 200.0,\\n            \\"Amazon\\": 50.0,\\n            \\"Ebay\\": 54.0,\\n            \\"Total\\": 304.0\\n        },\\n        \\"Month 7\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 48.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 8\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 52.0,\\n            \\"Ebay\\": 47.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 9\\": {\\n            \\"ZARA\\": 201.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 51.0,\\n            \\"Total\\": 303.0\\n        },\\n        \\"Month 10\\": {\\n            \\"ZARA\\": 54.0,\\n            \\"Total\\": 54.0\\n        }\\n    },\\n    \\"home\\": {\\n        \\"Month 1\\": {\\n            \\"Rent\\": 3987.0,\\n            \\"Electricity\\": 1824.0,\\n            \\"Total\\": 5811.0\\n        },\\n        \\"Month 2\\": {\\n            \\"Rent\\": 3891.0,\\n            \\"Electricity\\": 1813.0,\\n            \\"Total\\": 5704.0\\n        },\\n        \\"Month 3\\": {\\n            \\"Rent\\": 3874.0,\\n            \\"Electricity\\": 1895.0,\\n            \\"Total\\": 5769.0\\n        },\\n        \\"Month 4\\": {\\n            \\"Rent\\": 3933.0,\\n            \\"Electricity\\": 1817.0,\\n            \\"Total\\": 5750.0\\n        },\\n        \\"Month 5\\": {\\n            \\"Rent\\": 4151.0,\\n            \\"Electricity\\": 2064.0,\\n            \\"Total\\": 6215.0\\n        },\\n        \\"Month 6\\": {\\n            \\"Rent\\": 4232.0,\\n            \\"Electricity\\": 1803.0,\\n            \\"Total\\": 6035.0\\n        },\\n        \\"Month 7\\": {\\n            \\"Rent\\": 4028.\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What category do I spend the most money on in month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:56:03,680 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=699 request_id=25fba5a52f322c4f49a7b6672cc3f9f1 response_code=200
2023-10-20 17:56:03,681 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlCtjjbboEkW1giB1EwuKggBDcJ1",\n  "object": "chat.completion",\n  "created": 1697813763,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "In month 10, you spend the most money on the category \\"ZARA\\"."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 616,\n    "completion_tokens": 17,\n    "total_tokens": 633\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:03 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'699\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89461\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'358ms\', \'x-request-id\': \'25fba5a52f322c4f49a7b6672cc3f9f1\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921af21d32444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:03,681 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:03,682 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "What do I spend the most money on?"}, {"role": "assistant", "content": null, "function_call": {"name": "spending", "arguments": "{\\n  \\"input\\": \\"What category do I spend the most money on in month 10?\\"\\n}"}}, {"role": "function", "content": "In month 10, you spend the most money on the category \\"ZARA\\".", "name": "spending"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:06,824 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2915 request_id=f492750e319721bc4acf3199c11feee0 response_code=200
2023-10-20 17:56:06,827 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlCuQAIHjGU95aMREfv7q7HsyBpd",\n  "object": "chat.completion",\n  "created": 1697813764,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "In this month, you\'ve spent the most money on shopping at ZARA. Keep an eye on your spending habits to maintain a healthy budget!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 487,\n    "completion_tokens": 30,\n    "total_tokens": 517\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:07 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2915\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39719\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'421ms\', \'x-request-id\': \'f492750e319721bc4acf3199c11feee0\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921af87e1b444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:19,251 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:19,255 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "What did I spend the most money on last month?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:22,026 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2191 request_id=f32c6dc7ebb50c22d65e6824ebc2d950 response_code=200
2023-10-20 17:56:22,027 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlD99TVsymokEM48FMMTjbtgsZmX",\n  "object": "chat.completion",\n  "created": 1697813779,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "spending",\n          "arguments": "{\\n  \\"input\\": \\"What was my highest spending category in month 9?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 437,\n    "completion_tokens": 24,\n    "total_tokens": 461\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:22 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2191\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39733\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'400ms\', \'x-request-id\': \'f32c6dc7ebb50c22d65e6824ebc2d950\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921b5b0ec9152e-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:22,028 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:56:22,028 - openai - DEBUG - api_version=None data='{"input": ["What was my highest spending category in month 9?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:56:22,319 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=32 request_id=45da0377efd133a1a410ed60b9bc3990 response_code=200
2023-10-20 17:56:22,321 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 11,\n    "total_tokens": 11\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:22 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'32\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999988\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'45da0377efd133a1a410ed60b9bc3990\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921b6b2dd4152e-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:22,325 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:22,325 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/spending/category_tables.json\\n\\n0\\n        },\\n        \\"Month 6\\": {\\n            \\"ZARA\\": 200.0,\\n            \\"Amazon\\": 50.0,\\n            \\"Ebay\\": 54.0,\\n            \\"Total\\": 304.0\\n        },\\n        \\"Month 7\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 48.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 8\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 52.0,\\n            \\"Ebay\\": 47.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 9\\": {\\n            \\"ZARA\\": 201.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 51.0,\\n            \\"Total\\": 303.0\\n        },\\n        \\"Month 10\\": {\\n            \\"ZARA\\": 54.0,\\n            \\"Total\\": 54.0\\n        }\\n    },\\n    \\"home\\": {\\n        \\"Month 1\\": {\\n            \\"Rent\\": 3987.0,\\n            \\"Electricity\\": 1824.0,\\n            \\"Total\\": 5811.0\\n        },\\n        \\"Month 2\\": {\\n            \\"Rent\\": 3891.0,\\n            \\"Electricity\\": 1813.0,\\n            \\"Total\\": 5704.0\\n        },\\n        \\"Month 3\\": {\\n            \\"Rent\\": 3874.0,\\n            \\"Electricity\\": 1895.0,\\n            \\"Total\\": 5769.0\\n        },\\n        \\"Month 4\\": {\\n            \\"Rent\\": 3933.0,\\n            \\"Electricity\\": 1817.0,\\n            \\"Total\\": 5750.0\\n        },\\n        \\"Month 5\\": {\\n            \\"Rent\\": 4151.0,\\n            \\"Electricity\\": 2064.0,\\n            \\"Total\\": 6215.0\\n        },\\n        \\"Month 6\\": {\\n            \\"Rent\\": 4232.0,\\n            \\"Electricity\\": 1803.0,\\n            \\"Total\\": 6035.0\\n        },\\n        \\"Month 7\\": {\\n            \\"Rent\\": 4028.\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What was my highest spending category in month 9?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:56:23,655 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=782 request_id=85924c92b35ccf56ba32bdc68516e23f response_code=200
2023-10-20 17:56:23,656 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDDSFgMhPtg32nghxxQYb9L8l6J",\n  "object": "chat.completion",\n  "created": 1697813783,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Your highest spending category in month 9 was ZARA."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 613,\n    "completion_tokens": 12,\n    "total_tokens": 625\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:23 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'782\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89463\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'358ms\', \'x-request-id\': \'85924c92b35ccf56ba32bdc68516e23f\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921b6cfa1a152e-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:23,658 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:23,658 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "What did I spend the most money on last month?"}, {"role": "assistant", "content": null, "function_call": {"name": "spending", "arguments": "{\\n  \\"input\\": \\"What was my highest spending category in month 9?\\"\\n}"}}, {"role": "function", "content": "Your highest spending category in month 9 was ZARA.", "name": "spending"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:26,891 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=2906 request_id=af6ccc1ea92557721fca4af9406b8df5 response_code=200
2023-10-20 17:56:26,894 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDEYhI5bA9Ooqi3JGHSROzu7qlZ",\n  "object": "chat.completion",\n  "created": 1697813784,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Last month, you spent the most money at ZARA. Keep an eye on your spending habits to ensure they align with your financial goals."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 481,\n    "completion_tokens": 29,\n    "total_tokens": 510\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:27 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'2906\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39718\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'423ms\', \'x-request-id\': \'af6ccc1ea92557721fca4af9406b8df5\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921b755895152e-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:34,937 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:34,941 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much do I spend at ZARA each month?"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:36,987 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1580 request_id=74d43706c0a465c06f2bd116657b3965 response_code=200
2023-10-20 17:56:36,988 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDPajHkiyNSxAXQushwOTM39xTx",\n  "object": "chat.completion",\n  "created": 1697813795,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "spending",\n          "arguments": "{\\n  \\"input\\": \\"How much do I spend at ZARA each month?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 437,\n    "completion_tokens": 24,\n    "total_tokens": 461\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:37 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1580\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39735\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'397ms\', \'x-request-id\': \'74d43706c0a465c06f2bd116657b3965\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921bbd3bad1526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:36,990 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:56:36,990 - openai - DEBUG - api_version=None data='{"input": ["How much do I spend at ZARA each month?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:56:37,262 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=29 request_id=4b651b736dac4a773b3df3c51fc4b85e response_code=200
2023-10-20 17:56:37,263 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 11,\n    "total_tokens": 11\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:37 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'29\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999990\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'4b651b736dac4a773b3df3c51fc4b85e\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921bc8be8c1526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:37,266 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:37,266 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/spending/category_tables.json\\n\\n0\\n        },\\n        \\"Month 6\\": {\\n            \\"ZARA\\": 200.0,\\n            \\"Amazon\\": 50.0,\\n            \\"Ebay\\": 54.0,\\n            \\"Total\\": 304.0\\n        },\\n        \\"Month 7\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 48.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 8\\": {\\n            \\"ZARA\\": 202.0,\\n            \\"Amazon\\": 52.0,\\n            \\"Ebay\\": 47.0,\\n            \\"Total\\": 301.0\\n        },\\n        \\"Month 9\\": {\\n            \\"ZARA\\": 201.0,\\n            \\"Amazon\\": 51.0,\\n            \\"Ebay\\": 51.0,\\n            \\"Total\\": 303.0\\n        },\\n        \\"Month 10\\": {\\n            \\"ZARA\\": 54.0,\\n            \\"Total\\": 54.0\\n        }\\n    },\\n    \\"home\\": {\\n        \\"Month 1\\": {\\n            \\"Rent\\": 3987.0,\\n            \\"Electricity\\": 1824.0,\\n            \\"Total\\": 5811.0\\n        },\\n        \\"Month 2\\": {\\n            \\"Rent\\": 3891.0,\\n            \\"Electricity\\": 1813.0,\\n            \\"Total\\": 5704.0\\n        },\\n        \\"Month 3\\": {\\n            \\"Rent\\": 3874.0,\\n            \\"Electricity\\": 1895.0,\\n            \\"Total\\": 5769.0\\n        },\\n        \\"Month 4\\": {\\n            \\"Rent\\": 3933.0,\\n            \\"Electricity\\": 1817.0,\\n            \\"Total\\": 5750.0\\n        },\\n        \\"Month 5\\": {\\n            \\"Rent\\": 4151.0,\\n            \\"Electricity\\": 2064.0,\\n            \\"Total\\": 6215.0\\n        },\\n        \\"Month 6\\": {\\n            \\"Rent\\": 4232.0,\\n            \\"Electricity\\": 1803.0,\\n            \\"Total\\": 6035.0\\n        },\\n        \\"Month 7\\": {\\n            \\"Rent\\": 4028.\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: How much do I spend at ZARA each month?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:56:39,121 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1611 request_id=ceeb4d6e7e9e21dcdd6a77f03aa1ff4b response_code=200
2023-10-20 17:56:39,124 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDRZuQFS6GVB0AyOFOI1hqWjrYK",\n  "object": "chat.completion",\n  "created": 1697813797,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "You spend the following amounts at ZARA each month:\\n- Month 6: $200.0\\n- Month 7: $202.0\\n- Month 8: $202.0\\n- Month 9: $201.0\\n- Month 10: $54.0"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 613,\n    "completion_tokens": 60,\n    "total_tokens": 673\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:39 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1611\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89466\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'356ms\', \'x-request-id\': \'ceeb4d6e7e9e21dcdd6a77f03aa1ff4b\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921bca59bf1526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:39,126 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:39,127 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "How much do I spend at ZARA each month?"}, {"role": "assistant", "content": null, "function_call": {"name": "spending", "arguments": "{\\n  \\"input\\": \\"How much do I spend at ZARA each month?\\"\\n}"}}, {"role": "function", "content": "You spend the following amounts at ZARA each month:\\n- Month 6: $200.0\\n- Month 7: $202.0\\n- Month 8: $202.0\\n- Month 9: $201.0\\n- Month 10: $54.0", "name": "spending"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:56:46,489 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=6959 request_id=e94b7cdfd063f4d4ad3b490d17a79fa4 response_code=200
2023-10-20 17:56:46,490 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDTP0M4WZ9p2XYd9n4yWP5coPb4",\n  "object": "chat.completion",\n  "created": 1697813799,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "Here\'s a breakdown of your monthly spending at ZARA:\\n\\n- In Month 6, you spent €200.00.\\n- In Month 7, you spent €202.00.\\n- In Month 8, you spent €202.00.\\n- In Month 9, you spent €201.00.\\n- So far in Month 10, you\'ve spent €54.00.\\n\\nRemember, it\'s always good to keep track of your spending habits!"\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 529,\n    "completion_tokens": 95,\n    "total_tokens": 624\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:56:46 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'6959\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39697\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'454ms\', \'x-request-id\': \'e94b7cdfd063f4d4ad3b490d17a79fa4\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921bd60c981526-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:56:58,046 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:56:58,050 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "So how much is that total"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:57:00,490 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1698 request_id=3947c17ca216912d4c76862ad7d8d180 response_code=200
2023-10-20 17:57:00,492 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDmO9bhvOwGrps4RmKKdKp6iW21",\n  "object": "chat.completion",\n  "created": 1697813818,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 432,\n    "completion_tokens": 25,\n    "total_tokens": 457\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:00 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1698\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39738\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'393ms\', \'x-request-id\': \'3947c17ca216912d4c76862ad7d8d180\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c4d5b99444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:00,494 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:57:00,495 - openai - DEBUG - api_version=None data='{"input": ["What is the balance of my current account for Month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:57:00,950 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=37 request_id=8b048712a84fd71360c246ff649871d9 response_code=200
2023-10-20 17:57:00,952 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 13,\n    "total_tokens": 13\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:01 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'37\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999986\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'8b048712a84fd71360c246ff649871d9\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c5b9ff3444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:00,958 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:57:00,959 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/current_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"current\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 411.97,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 753.52,\\n            \\"changeFromLastMonth\\": 341.55\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 1028.29,\\n            \\"changeFromLastMonth\\": 274.77\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 1349.06,\\n            \\"changeFromLastMonth\\": 320.77\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 1634.89,\\n            \\"changeFromLastMonth\\": 285.83\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 1950.69,\\n            \\"changeFromLastMonth\\": 315.8\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 2223.61,\\n            \\"changeFromLastMonth\\": 272.92\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 2506.37,\\n            \\"changeFromLastMonth\\": 282.76\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 2810.03,\\n            \\"changeFromLastMonth\\": 303.66\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 3097.3,\\n            \\"changeFromLastMonth\\": 287.27\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What is the balance of my current account for Month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:57:01,903 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=691 request_id=9ebbc685fb765d91b11b7ff18afe2f45 response_code=200
2023-10-20 17:57:01,904 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDpOcguwiuUFf4gDtvqZWoOQSN4",\n  "object": "chat.completion",\n  "created": 1697813821,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your current account for Month 10 is 3097.30."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 544,\n    "completion_tokens": 17,\n    "total_tokens": 561\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:02 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'691\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89482\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'345ms\', \'x-request-id\': \'9ebbc685fb765d91b11b7ff18afe2f45\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c5e8cc7444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:01,904 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:57:01,905 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "So how much is that total"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:57:04,098 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1878 request_id=897dafc95e36a897b92abbe52b25dd23 response_code=200
2023-10-20 17:57:04,098 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDqTrfi3RSJAeCmhcDbZqn3Jnvf",\n  "object": "chat.completion",\n  "created": 1697813822,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "balance",\n          "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 481,\n    "completion_tokens": 25,\n    "total_tokens": 506\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:04 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1878\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39721\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'418ms\', \'x-request-id\': \'897dafc95e36a897b92abbe52b25dd23\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c645d2c444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:04,099 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
2023-10-20 17:57:04,099 - openai - DEBUG - api_version=None data='{"input": ["What is the balance of my savings account for Month 10?"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
2023-10-20 17:57:04,508 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=41 request_id=7a048fd8444845097c8a7720f6b84630 response_code=200
2023-10-20 17:57:04,510 - openai - DEBUG - body='{\n  "object": "list",\n  "data": [\n    {\n      "object": "embedding",\n      "index": 0,\n      "embedding": ""\n    }\n  ],\n  "model": "text-embedding-ada-002-v2",\n  "usage": {\n    "prompt_tokens": 13,\n    "total_tokens": 13\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:04 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'41\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3000\', \'x-ratelimit-limit-tokens\': \'1000000\', \'x-ratelimit-remaining-requests\': \'2999\', \'x-ratelimit-remaining-tokens\': \'999986\', \'x-ratelimit-reset-requests\': \'20ms\', \'x-ratelimit-reset-tokens\': \'0s\', \'x-request-id\': \'7a048fd8444845097c8a7720f6b84630\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c721981444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:04,517 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:57:04,518 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like \'Based on the context, ...\' or \'The context information ...\' or anything along those lines."}, {"role": "user", "content": "Context information is below.\\n---------------------\\nfile_name: data/balance/savings_monthly.json\\n\\n{\\n    \\"account_number\\": \\"1234567890\\",\\n    \\"type\\": \\"savings\\",\\n    \\"frequency\\": \\"monthly\\",\\n    \\"data\\": [\\n        {\\n            \\"date\\": \\"2023-01-01\\",\\n            \\"amount\\": 2518.16,\\n            \\"changeFromLastMonth\\": 0\\n        },\\n        {\\n            \\"date\\": \\"2023-02-01\\",\\n            \\"amount\\": 3422.69,\\n            \\"changeFromLastMonth\\": 904.53\\n        },\\n        {\\n            \\"date\\": \\"2023-03-01\\",\\n            \\"amount\\": 4241.39,\\n            \\"changeFromLastMonth\\": 818.7\\n        },\\n        {\\n            \\"date\\": \\"2023-04-01\\",\\n            \\"amount\\": 5155.14,\\n            \\"changeFromLastMonth\\": 913.75\\n        },\\n        {\\n            \\"date\\": \\"2023-05-01\\",\\n            \\"amount\\": 6016.09,\\n            \\"changeFromLastMonth\\": 860.95\\n        },\\n        {\\n            \\"date\\": \\"2023-06-01\\",\\n            \\"amount\\": 6924.24,\\n            \\"changeFromLastMonth\\": 908.15\\n        },\\n        {\\n            \\"date\\": \\"2023-07-01\\",\\n            \\"amount\\": 7845.09,\\n            \\"changeFromLastMonth\\": 920.85\\n        },\\n        {\\n            \\"date\\": \\"2023-08-01\\",\\n            \\"amount\\": 8741.37,\\n            \\"changeFromLastMonth\\": 896.28\\n        },\\n        {\\n            \\"date\\": \\"2023-09-01\\",\\n            \\"amount\\": 9732.43,\\n            \\"changeFromLastMonth\\": 991.06\\n        },\\n        {\\n            \\"date\\": \\"2023-10-01\\",\\n            \\"amount\\": 10569.8,\\n            \\"changeFromLastMonth\\": 837.37\\n        }\\n    ]\\n}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What is the balance of my savings account for Month 10?\\nAnswer: "}], "stream": false, "model": "gpt-3.5-turbo", "temperature": 0.1}' message='Post details'
2023-10-20 17:57:05,958 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=931 request_id=52cb850f7b2cdbe058e92e019260e998 response_code=200
2023-10-20 17:57:05,958 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDtbrwtKo04pcON8489abtpOOJ7",\n  "object": "chat.completion",\n  "created": 1697813825,\n  "model": "gpt-3.5-turbo-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The balance of your savings account for Month 10 is 10569.8."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 548,\n    "completion_tokens": 17,\n    "total_tokens": 565\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:06 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-3.5-turbo-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'931\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'3500\', \'x-ratelimit-limit-tokens\': \'90000\', \'x-ratelimit-remaining-requests\': \'3499\', \'x-ratelimit-remaining-tokens\': \'89481\', \'x-ratelimit-reset-requests\': \'17ms\', \'x-ratelimit-reset-tokens\': \'345ms\', \'x-request-id\': \'52cb850f7b2cdbe058e92e019260e998\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c74ad6f444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:05,959 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:57:05,959 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "So how much is that total"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for Month 10 is 10569.8.", "name": "balance"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:57:09,432 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=3100 request_id=8390eccc2be08594dc06b3ee9d34a559 response_code=200
2023-10-20 17:57:09,434 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDuTc6HVgozz82B469gtN9UGOVf",\n  "object": "chat.completion",\n  "created": 1697813826,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": null,\n        "function_call": {\n          "name": "add",\n          "arguments": "{\\n  \\"a\\": 3097.30,\\n  \\"b\\": 10569.8\\n}"\n        }\n      },\n      "finish_reason": "function_call"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 530,\n    "completion_tokens": 27,\n    "total_tokens": 557\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:09 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'3100\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39704\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'444ms\', \'x-request-id\': \'8390eccc2be08594dc06b3ee9d34a559\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c7dbab5444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
2023-10-20 17:57:09,436 - openai - DEBUG - message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-10-20 17:57:09,443 - openai - DEBUG - api_version=None data='{"messages": [{"role": "system", "content": "You are AskGeorge, an expert personal financial helper with context about my spending (i.e. which categories I spend in, what stores I spend in) as well as my earnings and account balances. The date today is 2023-10-08 (8th of October, 2023). This corresponds to Month 10 in the data sources that you will consult, so if I ask you about last month, I\'m referring to month 9. If I ask you how much money I have all together, add the latest Month 10 money from my current account to my savings account. You are almost always talking about money or percentage changes, the currency is euros, so when you format numbers make sure to add the currency sign and if it\'s a decimal number make it 2 decimal points. Be conversational in your responses. For example, when asked \'How much has my savings account grown in the last 3 months\', you will respond along the lines of \'Your savings account grew X euros, from Y to Z, which is a A% increase. Well done!\'"}, {"role": "user", "content": "So how much is that total"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my current account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your current account for Month 10 is 3097.30.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "balance", "arguments": "{\\n  \\"input\\": \\"What is the balance of my savings account for Month 10?\\"\\n}"}}, {"role": "function", "content": "The balance of your savings account for Month 10 is 10569.8.", "name": "balance"}, {"role": "assistant", "content": null, "function_call": {"name": "add", "arguments": "{\\n  \\"a\\": 3097.30,\\n  \\"b\\": 10569.8\\n}"}}, {"role": "function", "content": "13667.099999999999", "name": "add"}], "stream": false, "model": "gpt-4", "temperature": 0.1, "functions": [{"name": "multiply", "description": "multiply(a: int, b: int) -> int\\nMultiple two integers and returns the result integer", "parameters": {"title": "multiply", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "add", "description": "add(a: int, b: int) -> int\\nAdd two integers and returns the result integer", "parameters": {"title": "add", "type": "object", "properties": {"a": {"title": "A", "type": "integer"}, "b": {"title": "B", "type": "integer"}}, "required": ["a", "b"]}}, {"name": "balance", "description": "Provides information about my account balance (either current and savings), daily, weekly, breakdown with absolute changes from time period to time period.Use a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}, {"name": "spending", "description": "Provides information about my spending, it\'s categories and specifically how much of my money I\'m spending whereUse a detailed plain text question as input to the tool.", "parameters": {"title": "DefaultToolFnSchema", "description": "Default tool function Schema.", "type": "object", "properties": {"input": {"title": "Input", "type": "string"}}, "required": ["input"]}}], "function_call": "auto"}' message='Post details'
2023-10-20 17:57:11,406 - openai - DEBUG - message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=1643 request_id=fba6bdc90bdc9e70ab142a478fdd2dfc response_code=200
2023-10-20 17:57:11,407 - openai - DEBUG - body='{\n  "id": "chatcmpl-8BlDxXsSTrtrFwSonAmkpJm2nk5vQ",\n  "object": "chat.completion",\n  "created": 1697813829,\n  "model": "gpt-4-0613",\n  "choices": [\n    {\n      "index": 0,\n      "message": {\n        "role": "assistant",\n        "content": "The total amount of money you have in both your current and savings account is €13,667.10."\n      },\n      "finish_reason": "stop"\n    }\n  ],\n  "usage": {\n    "prompt_tokens": 571,\n    "completion_tokens": 23,\n    "total_tokens": 594\n  }\n}\n' headers='{\'Date\': \'Fri, 20 Oct 2023 14:57:11 GMT\', \'Content-Type\': \'application/json\', \'Transfer-Encoding\': \'chunked\', \'Connection\': \'keep-alive\', \'access-control-allow-origin\': \'*\', \'Cache-Control\': \'no-cache, must-revalidate\', \'openai-model\': \'gpt-4-0613\', \'openai-organization\': \'the-harvard-advocate-1\', \'openai-processing-ms\': \'1643\', \'openai-version\': \'2020-10-01\', \'strict-transport-security\': \'max-age=15724800; includeSubDomains\', \'x-ratelimit-limit-requests\': \'200\', \'x-ratelimit-limit-tokens\': \'40000\', \'x-ratelimit-remaining-requests\': \'199\', \'x-ratelimit-remaining-tokens\': \'39698\', \'x-ratelimit-reset-requests\': \'300ms\', \'x-ratelimit-reset-tokens\': \'453ms\', \'x-request-id\': \'fba6bdc90bdc9e70ab142a478fdd2dfc\', \'CF-Cache-Status\': \'DYNAMIC\', \'Server\': \'cloudflare\', \'CF-RAY\': \'81921c938ad7444a-LCA\', \'Content-Encoding\': \'gzip\', \'alt-svc\': \'h3=":443"; ma=86400\'}' message='API response body'
